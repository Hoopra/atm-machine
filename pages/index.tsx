import Head from 'next/head';
import React, { useState } from 'react';

import { WithdrawalInput } from '@lib/components/WithdrawalInput';
import styled from 'styled-components';
import { calculateCashReturn, CashQuantity, restockATM, withdrawFromStock } from '@lib/util/cashCalculator';
import { PayoutSlots } from '@lib/components/PayoutSlots';
import { Button } from '@lib/components/generic/Button';
import { CurrencyEntity } from '@lib/components/Currency';

const Main = styled.main({
  padding: '5rem 0',
  margin: '2rem 0',
  display: 'flex',
  flex: 1,
  flexDirection: 'column',
  justifyContent: 'center',
  alignItems: 'center',
});

type ATMState = {
  stock: CashQuantity;
  payout?: CashQuantity;
};

export default function Index() {
  const [cashState, setCashState] = useState<ATMState>({
    stock: restockATM(),
  });
  const [error, setError] = useState<string>();
  const [showStock, setShowStock] = useState<boolean>();

  const { payout, stock } = cashState;

  const onWithdraw = (withdrawal: number) => {
    const payout = calculateCashReturn(withdrawal, stock);
    if (!payout) {
      setError(`Stock insufficient for withdrawal - sorry`);
      return;
    }
    setError(undefined);
    setCashState({
      payout,
      stock: withdrawFromStock(stock, payout),
    });
  };

  return (
    <div>
      <Head>
        <title>World's Best ATM</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Main>
        <h1>World's best ATM</h1>
        <PayoutSlots payout={payout} />

        <WithdrawalInput onWithdraw={onWithdraw} />
        {error && <div>{error}</div>}
        <Button onClick={() => setCashState({ stock: restockATM(), payout })}>Find another ATM</Button>
        <Button onClick={() => setShowStock(!showStock)}>{showStock ? 'Hide' : 'Show'} current stock</Button>
        {showStock && (
          <div>
            {Object.entries(stock).map(([type, quantity]) => (
              <CurrencyEntity key={type} type={+type} quantity={quantity} />
            ))}
          </div>
        )}
      </Main>
    </div>
  );
}
